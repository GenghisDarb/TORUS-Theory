name: CI Full          # <- single name

on:
  push:
  pull_request:

jobs:
  validate-structure:  # <- one job block
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Verify CI skeleton
        run: echo "CI skeleton OK"

      # ─── DOCX presence (warning-only) ──────────────────────────
      - name: Validate chapters folder
        run: |
          if [ ! -d "docs/book/chapters/" ]; then
            echo "Warning: docs/book/chapters/ folder is missing."
          elif ! find docs/book/chapters/ -type f -name "*.docx" | grep -q .; then
            echo "Warning: No DOCX files found in docs/book/chapters/."
          fi

      # ─── supplements & experiments must exist ─────────────────
      - name: Validate supplements and experiments folders
        run: |
          for folder in docs/supplements docs/experiments; do
            if [ ! -d "$folder" ]; then
              echo "$folder does not exist!"; exit 1
            fi
          done

      # ─── duplicate-filename guard (skip .keep) ────────────────
      - name: Check for duplicate filenames (excluding .keep)
        run: |
          dups=$(find docs/ -type f \
                 | sed 's!.*/!!' \
                 | grep -v '^\.keep$' \
                 | sort | uniq -d)
          if [ -n "$dups" ]; then
            echo "Duplicate filenames detected:"
            echo "$dups"
            exit 1
          else
            echo "No duplicate filenames (except .keep) found."
          fi

      # ─── Generate T-HET spectrum for notebook ───────────────
      - name: Generate T-HET spectrum file
        run: |
          python3 scripts/cmb_analysis_T-HET_vs_LCDM_adjusted_II.py

      # ─── CMB notebook smoke test ─────────────────────────────
      - name: Execute CMB notebook
        run: |
          pip install nbconvert nbclient
          jupyter nbconvert --to notebook --execute notebooks/cmb_torus_vs_thet.ipynb \
            --ExecutePreprocessor.timeout=1800 --output /tmp/out.ipynb

      - name: Install nbstripout
        run: pip3 install nbstripout==0.8.1

  test-suite:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install papermill pytest

    - name: Run validation notebooks
      run: |
        papermill notebooks/validation/entropy/entropy_drift_analysis.ipynb out_entropy.ipynb
        papermill notebooks/validation/realdata/PairCorr_Fourier_SideBand.ipynb out_paircorr.ipynb

    - name: Check notebook results
      run: |
        grep -q "TORUS-POSITIVE" out_entropy.ipynb || echo "Entropy analysis incomplete"
        grep -q "TORUS-POSITIVE" out_paircorr.ipynb || echo "Pair-correlation analysis incomplete"

  lattice-regeneration:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install PyKat (optional)
      if: env.PYKAT_ENABLED == 'true'
      run: |
        pip install pykat

    - name: Run lattice regeneration script
      run: |
        python scripts/regenerate_torus_solutions.py
      continue-on-error: true

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']   # ← pin
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install deps
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run notebook tests
        run: |
          papermill notebooks/validation/bicycle/recursive_controller_validation.ipynb out.ipynb
